{"version":3,"sources":["panels/Home.js","panels/Constructor.js","panels/Library.js","App.js","index.js"],"names":["Home","id","goTo","goBack","fetchedUser","setImg","useState","activeTab","setActiveTab","images","separator","onClick","selected","Fragment","before","size","mode","src","header","subheader","actions","map","image","index","key","style","padding","borderRadius","margin","console","log","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Constructor","schema","Image","canvasRef","React","useRef","top","setTop","bottom","setBottom","setGenStatus","setMemes","fontH","setFontH","fontС","setFontС","heightCanvas","setHeightCanvas","getFontHeight","font","parent","document","createElement","appendChild","createTextNode","body","cssText","offsetHeight","removeChild","useEffect","imm","getElementById","rotate","width","window","innerWidth","canvas","current","ctx","getContext","clearRect","drawImage","text","fillStyle","lineHeight","maxWidth","marginTop","words","split","countWords","length","line","n","testLine","measureText","marginLeft","fillText","writeTop","writeBottom","writeGroup","toDataURL","generate","left","display","crossOrigin","ref","min","max","value","Number","onChange","backgroundColor","border","status","placeholder","e","target","multiline","stretched","marginRight","Library","App","activePanel","setActivePanel","history","setHistory","img","setUser","popout","setPopout","scheme","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","createAttribute","attributes","setNamedItem","fetchData","panel","pushState","newHistory","pop","onSwipeBack","ReactDOM","render"],"mappings":"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","file":"static/js/main.80bea684.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {PanelHeader, Panel, CardGrid, Card, Group, Button, Banner, Avatar, Header, TabsItem, Tabs, Cell} from \"@vkontakte/vkui\";\r\n\r\nconst Home = ({id, goTo, goBack, fetchedUser, setImg }) => {\r\n    const [activeTab, setActiveTab] = useState('memes');\r\n    const [images, setImages] = useState([\r\n        'https://sun9-56.userapi.com/baoxdsF_-He5F9NiEG9813iB6jspc3Pr2Vk3nQ/0R1ob9TJK2s.jpg',\r\n        'https://i.imgflip.com/1bij.jpg',\r\n        'https://sun9-34.userapi.com/Jb02ospH0-uzudorTg4yUWXDGg5CDtELMa68nA/XLgm_Xs8kZY.jpg',\r\n        'https://sun9-53.userapi.com/kQoYlGSpvfSLVN4AiaZu4Xsth4wR_44yU6-5xA/-3n8REtiI6A.jpg',\r\n        'https://sun9-10.userapi.com/pQprij-LTwwC7DWNoPI4CGXw3_wS70l6OtUyyg/nYpBF5bKJuY.jpg',\r\n        'https://sun9-46.userapi.com/JnFsdanmKshkCHetGmIN-93e2X4QK0zAhIBYNA/Brq-SJr-kgo.jpg',\r\n        'https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg',\r\n        'https://sun9-16.userapi.com/hNxjkGka1jzBZJta9cG7smu0_25NzqR9l_WL9Q/CcS7f61M2GQ.jpg',\r\n        'https://sun9-44.userapi.com/jksvfHftzlSQJVEALaBeloaXc1Nmvaq8J6j6dA/mbG5LDMVkgI.jpg',\r\n        'https://sun9-63.userapi.com/3BcLZYSDoxeRqPtdrRmcTUjibcOdrqJSrhrB1g/gpOCU96uTm8.jpg'\r\n    ])\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader separator={false}>\r\n                Memes\r\n            </PanelHeader>\r\n            <Tabs>\r\n                <TabsItem\r\n                    onClick={() => setActiveTab('memes')}\r\n                    selected={activeTab === 'memes'}\r\n                >\r\n                    Мемасики\r\n                </TabsItem>\r\n                <TabsItem\r\n                    onClick={() => setActiveTab('about')}\r\n                    selected={activeTab === 'about'}\r\n                >\r\n                    О пользователе\r\n                </TabsItem>\r\n            </Tabs>\r\n            {\r\n                activeTab === 'memes' &&\r\n                <React.Fragment>\r\n                    <Banner\r\n                        before={<Avatar size={96} mode=\"image\" src=\"https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg\" />}\r\n                        header=\"Двустрочный\"\r\n                        subheader=\"Две строки для текста\"\r\n                        actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    <Banner\r\n                        before={<Avatar size={96} mode=\"image\" src=\"https://sun9-32.userapi.com/ParIQVaDXNxPzFTeh4EfL7Okamle-0ZvmvRRcg/N2NXEDHfEbs.jpg\" />}\r\n                        header=\"Квадраты\"\r\n                        subheader=\"Два квадрата справа для текста\"\r\n                        actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    <Banner\r\n                        before={<Avatar size={96} mode=\"image\" src=\"https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg\" />}\r\n                        header=\"Двустрочный\"\r\n                        subheader=\"Мем с двумя строками\"\r\n                        actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Последние созданные</Header>}>\r\n                        <CardGrid>\r\n                            {\r\n                                images.map((image, index)=>{\r\n                                    return (\r\n                                        <Card\r\n                                            key={index}\r\n                                            style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                            size=\"s\"\r\n                                            onClick={()=>{\r\n                                                console.log(123)\r\n                                            }}\r\n                                        >\r\n                                            <div style={{\r\n                                                height: 96,\r\n                                                backgroundImage: 'url(' + image + ')',\r\n                                                backgroundSize: 'cover',\r\n                                                backgroundPosition: 'center 35%',\r\n                                                backgroundRepeat: 'no-repeat',\r\n                                                borderRadius: 13\r\n                                            }} />\r\n                                        </Card>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </CardGrid>\r\n                    </Group>\r\n                </React.Fragment>\r\n            }\r\n            {\r\n                activeTab === 'about' &&\r\n                    <Cell>djn</Cell>\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst Constructor = ({id, image, goTo, goBack}) => {\r\n    let schema = new Image()\r\n    schema.src = image\r\n    const [img, setImg] = useState(schema);\r\n    const canvasRef = React.useRef(null)\r\n    const [top, setTop] = useState('')\r\n    const [bottom, setBottom] = useState('')\r\n    const [genStatus, setGenStatus] = useState(false)\r\n    const [memes, setMemes] = useState(image)\r\n    const [fontH, setFontH] = useState(30)\r\n    const [fontС, setFontС] = useState('white')\r\n    const [heightCanvas, setHeightCanvas] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        generate()\r\n    })\r\n\r\n    useEffect(()=>{\r\n        // const canvas = canvasRef.current\r\n        // const ctx = canvas.getContext('2d')\r\n        // let imm = document.getElementById('kart');\r\n        // let rotate = imm.height / imm.width\r\n        // imm.style.width = window.innerWidth\r\n        // imm.style.height = window.innerWidth * rotate\r\n        // console.log(imm)\r\n        // ctx.drawImage(imm, 0, 0)\r\n        //ctx.drawImage(img, 0, 0)\r\n    }, [])\r\n    function writeTop(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = fontС;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let maxWidth = canvas.width;\r\n        let marginTop = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeBottom(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        let maxWidth = canvas.width;\r\n        let marginTop;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        ctx.measureText(text).width > maxWidth ?\r\n            marginTop = canvas.height - getFontHeight(ctx.font)-10 :\r\n            marginTop = canvas.height - 10\r\n        ctx.fillStyle = fontС;\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeGroup() {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.font = '10px Arial';\r\n        ctx.fillStyle = '#FFF';\r\n        let marginTop = canvas.height - 2\r\n        let marginLeft = 0\r\n        ctx.fillText('https://vk.com/gen_memes', marginLeft, marginTop);\r\n    }\r\n    function getFontHeight(font) {\r\n        let parent = document.createElement(\"span\");\r\n        parent.appendChild(document.createTextNode(\"height\"));\r\n        document.body.appendChild(parent);\r\n        parent.style.cssText = \"font: \" + font + \"; white-space: nowrap; display: inline;\";\r\n        let height = parent.offsetHeight;\r\n        document.body.removeChild(parent);\r\n        return height;\r\n    }\r\n    function generate(){\r\n        let imm = document.getElementById('kart');\r\n        let rotate = imm.height / imm.width\r\n        setHeightCanvas(window.innerWidth*rotate)\r\n\r\n        setGenStatus(true)\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.clearRect(0,0,canvas.width,canvas.height)\r\n        imm.style.width = window.innerWidth\r\n        imm.style.height = window.innerWidth * rotate\r\n        ctx.drawImage(imm, 0, 0, window.innerWidth, window.innerWidth * rotate)\r\n        writeTop(top)\r\n        writeBottom(bottom)\r\n        writeGroup()\r\n        setMemes(canvas.toDataURL(\"image/png\"))\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            <img style={{display: 'none'}} crossOrigin={'anonymous'} id={'kart'} src={image}/>\r\n            {/*<img width={window.innerWidth} height={image.height} src={memes} />*/}\r\n            <canvas\r\n                //style={{display: 'none'}}\r\n                ref={canvasRef}\r\n                width={window.innerWidth}\r\n                height={heightCanvas}\r\n            />\r\n            <FormLayout>\r\n                <Slider\r\n                    min={10}\r\n                    max={100}\r\n                    value={Number(fontH)}\r\n                    onChange={fontH=>setFontH(fontH)}\r\n                    top=\"Размер шрифта\"\r\n                />\r\n                <Tabs>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('white')}\r\n                        selected={fontС === 'white'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'white', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('black')}\r\n                        selected={fontС === 'black'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'black', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('red')}\r\n                        selected={fontС === 'red'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'red', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('blue')}\r\n                        selected={fontС === 'blue'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'blue', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('chocolate')}\r\n                        selected={fontС === 'chocolate'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'chocolate', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('lightseagreen')}\r\n                        selected={fontС === 'lightseagreen'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'lightseagreen', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                </Tabs>\r\n                    <Input\r\n                        status={\r\n                            top.length>0 ?\r\n                                top.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={top.length+'/50'}\r\n                        top=\"Текст верхней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={top}\r\n                        onChange={e=>setTop(e.target.value)}/>\r\n                    <Input\r\n                        status={\r\n                            bottom.length>0 ?\r\n                                bottom.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={bottom.length+'/50'}\r\n                        top=\"Текст нижней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={bottom}\r\n                        onChange={e=>setBottom(e.target.value)}/>\r\n                        <Cell multiline>Обратите внимание: для корректного переноса строк между словами обязательно должны быть пробелы.</Cell>\r\n            </FormLayout>\r\n            {\r\n                top !== '' || bottom !== '' ?\r\n                    <React.Fragment>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button before={<Icon24ShareOutline/>} size=\"l\" stretched style={{ marginRight: 8 }}>На стену</Button>\r\n                            <Button before={<Icon24LogoInstagram/>} size=\"l\" stretched>В историю</Button>\r\n                        </Div>\r\n                        <Div>\r\n                            <Button before={<Icon24Attachments/>} size=\"xl\">Сохранить в библиотеке</Button>\r\n                        </Div>\r\n                    </React.Fragment> :\r\n                    null\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Constructor;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem, CardGrid, Card, Group\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst Library = ({id, goTo, goBack, fetchedUser, setImg }) => {\r\n    const [images, setImages] = useState([\r\n        'https://sun9-56.userapi.com/baoxdsF_-He5F9NiEG9813iB6jspc3Pr2Vk3nQ/0R1ob9TJK2s.jpg',\r\n        'https://i.imgflip.com/1bij.jpg',\r\n        'https://sun9-34.userapi.com/Jb02ospH0-uzudorTg4yUWXDGg5CDtELMa68nA/XLgm_Xs8kZY.jpg',\r\n        'https://sun9-53.userapi.com/kQoYlGSpvfSLVN4AiaZu4Xsth4wR_44yU6-5xA/-3n8REtiI6A.jpg',\r\n        'https://sun9-10.userapi.com/pQprij-LTwwC7DWNoPI4CGXw3_wS70l6OtUyyg/nYpBF5bKJuY.jpg',\r\n        'https://sun9-46.userapi.com/JnFsdanmKshkCHetGmIN-93e2X4QK0zAhIBYNA/Brq-SJr-kgo.jpg',\r\n        'https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg',\r\n        'https://sun9-16.userapi.com/hNxjkGka1jzBZJta9cG7smu0_25NzqR9l_WL9Q/CcS7f61M2GQ.jpg',\r\n        'https://sun9-44.userapi.com/jksvfHftzlSQJVEALaBeloaXc1Nmvaq8J6j6dA/mbG5LDMVkgI.jpg',\r\n        'https://sun9-63.userapi.com/3BcLZYSDoxeRqPtdrRmcTUjibcOdrqJSrhrB1g/gpOCU96uTm8.jpg',\r\n        'https://sun9-62.userapi.com/gJ1myhBYwdUz0ewDXdQ1V-STN5vQUjlbkgxyqw/5fMS4sz-qUw.jpg',\r\n        'https://sun9-4.userapi.com/k9-_Nx5VJ2MArBpl29IRKXK3flr-0d7W9F8tOQ/L8XPEe6GycQ.jpg',\r\n\r\n    ])\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            <Group separator=\"hide\">\r\n                <CardGrid>\r\n                    {\r\n                        images.map((image, index)=>{\r\n                            return (\r\n                                <Card\r\n                                    key={index}\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    onClick={()=>{\r\n                                        setImg(image);\r\n                                        goTo('constructor')\r\n                                    }}\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Group>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Library;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home'\nimport Constructor from './panels/Constructor'\nimport Library from \"./panels/Library\"\nimport {ConfigProvider} from \"@vkontakte/vkui\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [history, setHistory] = useState(['home']);\n\tconst [img, setImg] = useState(null);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null); //<ScreenSpinner size='large' />\n\tconst [scheme, setScheme] = useState('dark_gray')\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst goTo = (panel) => {\n\t\twindow.history.pushState({panel: panel}, panel)\n\t\tsetActivePanel(panel);\n\t\tlet newHistory = [...history, panel]\n\t\tconsole.log(newHistory)\n\t\tsetHistory(newHistory)\n\t};\n\n\tconst goBack = () => {\n\t\tif (history.length === 1) {\n\t\t\tbridge.send('VKWebAppClose', {'status': 'sucsess'})\n\t\t} else {\n\t\t\thistory.pop();\n\t\t\tsetActivePanel(history[history.length-1]);\n\t\t\tconsole.log(history);\n\t\t\tsetHistory(history);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t<View activePanel={activePanel} popout={popout} history={history} onSwipeBack={goBack}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} />\n\t\t\t<Library id='library' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg}/>\n\t\t\t<Constructor id='constructor' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} image={img} />\n\t\t</View>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}