{"version":3,"sources":["panels/Home.js","panels/Constructor.js","panels/Library.js","panels/TouchConstructor.js","App.js","index.js"],"names":["Home","id","goTo","setImg","goBack","fetchedUser","images","useState","activeTab","setActiveTab","separator","onClick","selected","Fragment","before","size","header","subheader","actions","mode","src","map","image","index","key","style","padding","borderRadius","margin","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Constructor","img","imageLink","setImageLink","canvasRef","React","useRef","top","setTop","bottom","setBottom","setGenStatus","memes","setMemes","fontH","setFontH","fontС","setFontС","heightCanvas","setHeightCanvas","getFontHeight","font","parent","document","createElement","appendChild","createTextNode","body","cssText","offsetHeight","removeChild","useEffect","schema","Image","console","log","imm","getElementById","rotate","width","window","innerWidth","canvas","current","ctx","getContext","clearRect","drawImage","text","fillStyle","strokeStyle","lineWidth","lineHeight","maxWidth","marginTop","words","split","countWords","length","line","n","testLine","measureText","marginLeft","strokeText","fillText","writeTop","writeBottom","writeGroup","memesImg","toDataURL","generate","left","display","crossOrigin","ref","min","max","value","Number","onChange","backgroundColor","border","status","placeholder","e","target","multiline","bridge","send","then","res","catch","stretched","marginRight","Date","now","icon","action","selectedFile","files","URL","createObjectURL","reader","FileReader","onload","theFile","this","result","readAsDataURL","uploadPhoto","controlSize","Library","TouchConstructor","App","activePanel","setActivePanel","history","setHistory","setUser","popout","setPopout","scheme","reverse","a","user","subscribe","detail","type","data","schemeAttribute","createAttribute","attributes","setNamedItem","fetchData","panel","pushState","newHistory","pop","onSwipeBack","ReactDOM","render"],"mappings":"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","file":"static/js/main.7c6dde96.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {PanelHeader, Panel, CardGrid, Card, Group, Button, Banner, Avatar, Header, TabsItem, Tabs, Cell} from \"@vkontakte/vkui\";\r\nimport Icon56DownloadSquareOutline from '@vkontakte/icons/dist/56/download_square_outline';\r\n\r\nconst Home = ({id, goTo, goBack, fetchedUser, setImg, images }) => {\r\n    const [activeTab, setActiveTab] = useState('memes');\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader separator={false}>\r\n                Memes\r\n            </PanelHeader>\r\n            <Tabs>\r\n                <TabsItem\r\n                    onClick={() => setActiveTab('memes')}\r\n                    selected={activeTab === 'memes'}\r\n                >\r\n                    Мемасики\r\n                </TabsItem>\r\n                <TabsItem\r\n                    onClick={() => setActiveTab('about')}\r\n                    selected={activeTab === 'about'}\r\n                >\r\n                    О пользователе\r\n                </TabsItem>\r\n            </Tabs>\r\n            {\r\n                activeTab === 'memes' &&\r\n                <React.Fragment>\r\n                    <Banner\r\n                        before={<Avatar size={96}><Icon56DownloadSquareOutline /></Avatar>}\r\n                        header=\"Индивидуальный\"\r\n                        subheader=\"Создать мем на основе Вашего фона.\"\r\n                        actions={<Button onClick={()=>{\r\n                            setImg(null)\r\n                            goTo('constructor')\r\n                        }\r\n                        }>Выбрать</Button>}\r\n                    />\r\n                    <Banner\r\n                        before={<Avatar size={96} mode=\"image\" src=\"https://sun9-2.userapi.com/9zeJTHhDUrMoa68qJSXbQ9kvxllYaR-hznQKSA/YW69HXGyYKA.jpg\" />}\r\n                        header=\"Выбрать фон\"\r\n                        subheader=\"Олдовые фоны для мемов из нашей коллекции.\"\r\n                        actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    {/*<Banner*/}\r\n                    {/*    before={<Avatar size={96} mode=\"image\" src=\"https://sun9-32.userapi.com/ParIQVaDXNxPzFTeh4EfL7Okamle-0ZvmvRRcg/N2NXEDHfEbs.jpg\" />}*/}\r\n                    {/*    header=\"Квадраты\"*/}\r\n                    {/*    subheader=\"Два квадрата справа для текста\"*/}\r\n                    {/*    //actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}*/}\r\n                    {/*/>*/}\r\n                    {/*<Banner*/}\r\n                    {/*    before={<Avatar size={96} mode=\"image\" src=\"https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg\" />}*/}\r\n                    {/*    header=\"Двустрочный\"*/}\r\n                    {/*    subheader=\"Мем с двумя строками\"*/}\r\n                    {/*    actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}*/}\r\n                    {/*/>*/}\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Новые фоны</Header>}>\r\n                        <CardGrid>\r\n                            {\r\n                                images.map((image, index)=>{\r\n                                    return (\r\n                                        <Card\r\n                                            key={index}\r\n                                            style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                            size=\"s\"\r\n                                            onClick={()=>{\r\n                                                setImg(image);\r\n                                                goTo('constructor')\r\n                                            }}\r\n                                        >\r\n                                            <div style={{\r\n                                                height: 96,\r\n                                                backgroundImage: 'url(' + image + ')',\r\n                                                backgroundSize: 'cover',\r\n                                                backgroundPosition: 'center 35%',\r\n                                                backgroundRepeat: 'no-repeat',\r\n                                                borderRadius: 13\r\n                                            }} />\r\n                                        </Card>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </CardGrid>\r\n                    </Group>\r\n                </React.Fragment>\r\n            }\r\n            {\r\n                activeTab === 'about' &&\r\n                    <Cell>djn</Cell>\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem, Placeholder, File\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\r\nimport Icon24Camera from '@vkontakte/icons/dist/24/camera';\r\nimport Icon24Download from '@vkontakte/icons/dist/24/download';\r\nimport Icon24Share from '@vkontakte/icons/dist/24/share';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst Constructor = ({id, image, goTo, goBack, fetchedUser}) => {\r\n    const [img, setImg] = useState(null);\r\n    // if (image){\r\n    //     let schema = new Image()\r\n    //     schema.src = image\r\n    //     setImg(schema)\r\n    // }\r\n    const [imageLink, setImageLink] = useState(null)\r\n    const canvasRef = React.useRef(null)\r\n    const [top, setTop] = useState('')\r\n    const [bottom, setBottom] = useState('')\r\n    const [genStatus, setGenStatus] = useState(false)\r\n    const [memes, setMemes] = useState(image) //\r\n    const [fontH, setFontH] = useState(30)\r\n    const [fontС, setFontС] = useState('white')\r\n    const [heightCanvas, setHeightCanvas] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if (image){\r\n            setImageLink(image)\r\n            let schema = new Image()\r\n            schema.src = image\r\n            console.log(schema)\r\n            setImg(schema)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        generate()\r\n    })\r\n\r\n    function writeTop(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = fontС;\r\n        ctx.font = 'bold '+fontH+'px Oswald';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 6;\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let maxWidth = canvas.width;\r\n        let marginTop = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.strokeText(line, marginLeft, marginTop);\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.strokeText(line, marginLeft, marginTop);\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeBottom(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        let maxWidth = canvas.width;\r\n        let marginTop;\r\n        ctx.font = 'bold '+fontH+'px Oswald';\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 6;\r\n        ctx.measureText(text).width > maxWidth ?\r\n            marginTop = canvas.height - getFontHeight(ctx.font)-10 :\r\n            marginTop = canvas.height - 15\r\n        ctx.fillStyle = fontС;\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.strokeText(line, marginLeft, marginTop);\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.strokeText(line, marginLeft, marginTop);\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeGroup() {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.font = '10px Arial';\r\n        ctx.fillStyle = '#FFF';\r\n        let marginTop = canvas.height - 2\r\n        let marginLeft = 0\r\n        ctx.strokeStyle = 'black';\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeText('https://vk.com/gen_memes', marginLeft, marginTop);\r\n        ctx.fillText('https://vk.com/gen_memes', marginLeft, marginTop);\r\n    }\r\n    function getFontHeight(font) {\r\n        let parent = document.createElement(\"span\");\r\n        parent.appendChild(document.createTextNode(\"height\"));\r\n        document.body.appendChild(parent);\r\n        parent.style.cssText = \"font: \" + font + \"; white-space: nowrap; display: inline;\";\r\n        let height = parent.offsetHeight;\r\n        document.body.removeChild(parent);\r\n        return height;\r\n    }\r\n    function generate(){\r\n        if (img !== null){\r\n            let imm = document.getElementById('kart');\r\n            let rotate = imm.height / imm.width\r\n            setHeightCanvas(window.innerWidth*rotate)\r\n            setGenStatus(true)\r\n            const canvas = canvasRef.current\r\n            const ctx = canvas.getContext('2d')\r\n            ctx.clearRect(0,0,canvas.width,canvas.height)\r\n            imm.style.width = window.innerWidth\r\n            imm.style.height = window.innerWidth * rotate\r\n            ctx.drawImage(imm, 0, 0, window.innerWidth, window.innerWidth * rotate)\r\n            writeTop(top)\r\n            writeBottom(bottom)\r\n            writeGroup()\r\n            const memesImg = canvas.toDataURL(\"image/png\")\r\n            console.log(memesImg)\r\n            setMemes(memesImg)\r\n        }\r\n    }\r\n\r\n    function uploadPhoto() {\r\n        let selectedFile = document.getElementById('input').files[0]\r\n        let schema = new Image()\r\n        schema.src = URL.createObjectURL(selectedFile);\r\n        let reader = new FileReader();\r\n        reader.onload = function(theFile) {\r\n            let image = new Image();\r\n            image.onload = function() {\r\n                let rotate = this.height / this.width\r\n                setHeightCanvas(window.innerWidth*rotate)\r\n            };\r\n            image.src = theFile.target.result;\r\n        };\r\n        reader.readAsDataURL(selectedFile);\r\n        setImg(schema)\r\n        setImageLink(URL.createObjectURL(selectedFile))\r\n\r\n    }\r\n\r\n    function wallPost(){\r\n        console.log(memes.src, memes)\r\n        bridge.send(\"VKWebAppShowWallPostBox\", {\r\n            \"attachments\": [memes],\r\n            \"message\": \"Memes - генератор мемчиков\",\r\n            \"owner_id\": fetchedUser.id,\r\n            \"copyright\": 'https://vk.com/app7593874'\r\n        }).then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    function downLoad() {\r\n        console.log(memes.src, memes)\r\n        bridge.send(\"VKWebAppDownloadFile\", {\"url\": memes, \"filename\": Date.now()+\".jpg\"})\r\n            .then(res=>console.log(res))\r\n            .catch(e=>console.log(e))\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            {\r\n                img !== null ?\r\n                    <React.Fragment>\r\n                        <img style={{display: 'none'}} crossOrigin={'anonymous'} id={'kart'} src={image || imageLink}/>\r\n                        {/*<img width={window.innerWidth} height={image.height} src={memes} />*/}\r\n                        <canvas\r\n                            //style={{display: 'none'}}\r\n                            ref={canvasRef}\r\n                            width={window.innerWidth}\r\n                            height={heightCanvas}\r\n                        />\r\n                        <FormLayout>\r\n                            <Slider\r\n                                min={10}\r\n                                max={100}\r\n                                value={Number(fontH)}\r\n                                onChange={fontH=>setFontH(fontH)}\r\n                                top=\"Размер шрифта\"\r\n                            />\r\n                            <Tabs>\r\n                                <TabsItem\r\n                                    onClick={()=>setFontС('white')}\r\n                                    selected={fontС === 'white'}\r\n                                >\r\n                                    <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'white', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                                </TabsItem>\r\n                                <TabsItem\r\n                                    onClick={()=>setFontС('black')}\r\n                                    selected={fontС === 'black'}\r\n                                >\r\n                                    <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'black', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                                </TabsItem>\r\n                                <TabsItem\r\n                                    onClick={()=>setFontС('red')}\r\n                                    selected={fontС === 'red'}\r\n                                >\r\n                                    <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'red', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                                </TabsItem>\r\n                                <TabsItem\r\n                                    onClick={()=>setFontС('blue')}\r\n                                    selected={fontС === 'blue'}\r\n                                >\r\n                                    <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'blue', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                                </TabsItem>\r\n                                <TabsItem\r\n                                    onClick={()=>setFontС('chocolate')}\r\n                                    selected={fontС === 'chocolate'}\r\n                                >\r\n                                    <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'chocolate', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                                </TabsItem>\r\n                                <TabsItem\r\n                                    onClick={()=>setFontС('lightseagreen')}\r\n                                    selected={fontС === 'lightseagreen'}\r\n                                >\r\n                                    <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'lightseagreen', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                                </TabsItem>\r\n                            </Tabs>\r\n                            <Input\r\n                                status={\r\n                                    top.length>0 ?\r\n                                        top.length < 50 ? 'valid' : 'error' :\r\n                                        null\r\n                                }\r\n                                bottom={top.length+'/50'}\r\n                                top=\"Текст верхней строки\"\r\n                                placeholder={'Напишите, или оставьте поле пустым'}\r\n                                value={top}\r\n                                onChange={e=>setTop(e.target.value)}/>\r\n                            <Input\r\n                                status={\r\n                                    bottom.length>0 ?\r\n                                        bottom.length < 50 ? 'valid' : 'error' :\r\n                                        null\r\n                                }\r\n                                bottom={bottom.length+'/50'}\r\n                                top=\"Текст нижней строки\"\r\n                                placeholder={'Напишите, или оставьте поле пустым'}\r\n                                value={bottom}\r\n                                onChange={e=>setBottom(e.target.value)}/>\r\n                            <Cell multiline>Обратите внимание: для корректного переноса строк между словами обязательно должны быть пробелы.</Cell>\r\n                        </FormLayout>\r\n                        {\r\n                            top !== '' || bottom !== '' ?\r\n                                <React.Fragment>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button onClick={()=>wallPost()} before={<Icon24ShareOutline/>} size=\"l\" stretched style={{ marginRight: 8 }}>На стену</Button>\r\n                                        <Button before={<Icon24LogoInstagram/>} size=\"l\" stretched>В историю</Button>\r\n                                    </Div>\r\n                                    <Div style={{display: 'flex'}}>\r\n                                        <Button onClick={()=>downLoad()} before={<Icon24Download/>} size=\"l\" stretched style={{ marginRight: 8 }}>Скачать</Button>\r\n                                        <Button before={<Icon24Attachments/>} size=\"l\" stretched>Сохранить</Button>\r\n                                    </Div>\r\n                                </React.Fragment> :\r\n                                null\r\n                        }\r\n                    </React.Fragment> :\r\n                    <Placeholder\r\n                        stretched\r\n                        icon={<Icon56GalleryOutline />}\r\n                        header=\"Загрузите Ваш фон\"\r\n                        action={\r\n                            <File id='input' onChange={()=>uploadPhoto()} before={<Icon24Camera />} controlSize=\"l\">\r\n                                Загрузить\r\n                            </File>\r\n                        }\r\n                    >\r\n                        Выберите и загрузите свой собственный фон для мема. Ваше творение будет доступно только Вам и тем людям, с которыми Вы решите поделиться.\r\n                    </Placeholder>\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Constructor;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem, CardGrid, Card, Group, Avatar, Banner\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\nimport Icon56DownloadSquareOutline from \"@vkontakte/icons/dist/56/download_square_outline\";\r\n\r\nconst Library = ({id, goTo, goBack, fetchedUser, setImg, images}) => {\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Выберите фон\r\n            </PanelHeader>\r\n            <Group separator=\"hide\">\r\n                <Banner\r\n                    before={<Avatar size={96}><Icon56DownloadSquareOutline /></Avatar>}\r\n                    header=\"Предложи свой фон\"\r\n                    subheader=\"Загрузи фон для мемасов, чтобы разместить его в библиотеке. На картинке должны отсутствовать надписи и водные знаки.\"\r\n                    actions={<Button onClick={()=>console.log('load')}>Загрузить</Button>}\r\n                />\r\n                <CardGrid>\r\n                    {\r\n                        images.map((image, index)=>{\r\n                            return (\r\n                                <Card\r\n                                    key={index}\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    onClick={()=>{\r\n                                        setImg(image);\r\n                                        goTo('constructor')\r\n                                    }}\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Group>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Library;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst TouchConstructor = ({id, image, goTo, goBack}) => {\r\n    let schema = new Image()\r\n    schema.src = image\r\n    const [img, setImg] = useState(schema);\r\n    const canvasRef = React.useRef(null)\r\n    const [top, setTop] = useState('')\r\n    const [bottom, setBottom] = useState('')\r\n    const [genStatus, setGenStatus] = useState(false)\r\n    const [memes, setMemes] = useState(image)\r\n    const [fontH, setFontH] = useState(30)\r\n    const [fontС, setFontС] = useState('white')\r\n    const [heightCanvas, setHeightCanvas] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        generate()\r\n    })\r\n\r\n    useEffect(()=>{\r\n        // const canvas = canvasRef.current\r\n        // const ctx = canvas.getContext('2d')\r\n        // let imm = document.getElementById('kart');\r\n        // let rotate = imm.height / imm.width\r\n        // imm.style.width = window.innerWidth\r\n        // imm.style.height = window.innerWidth * rotate\r\n        // console.log(imm)\r\n        // ctx.drawImage(imm, 0, 0)\r\n        //ctx.drawImage(img, 0, 0)\r\n    }, [])\r\n    function writeTop(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = fontС;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let maxWidth = canvas.width;\r\n        let marginTop = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeBottom(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        let maxWidth = canvas.width;\r\n        let marginTop;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        ctx.measureText(text).width > maxWidth ?\r\n            marginTop = canvas.height - getFontHeight(ctx.font)-10 :\r\n            marginTop = canvas.height - 10\r\n        ctx.fillStyle = fontС;\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeGroup() {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.font = '10px Arial';\r\n        ctx.fillStyle = '#FFF';\r\n        let marginTop = canvas.height - 2\r\n        let marginLeft = 0\r\n        ctx.fillText('https://vk.com/gen_memes', marginLeft, marginTop);\r\n    }\r\n    function getFontHeight(font) {\r\n        let parent = document.createElement(\"span\");\r\n        parent.appendChild(document.createTextNode(\"height\"));\r\n        document.body.appendChild(parent);\r\n        parent.style.cssText = \"font: \" + font + \"; white-space: nowrap; display: inline;\";\r\n        let height = parent.offsetHeight;\r\n        document.body.removeChild(parent);\r\n        return height;\r\n    }\r\n    function generate(){\r\n        let imm = document.getElementById('kart');\r\n        let rotate = imm.height / imm.width\r\n        setHeightCanvas(window.innerWidth*rotate)\r\n\r\n        setGenStatus(true)\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.clearRect(0,0,canvas.width,canvas.height)\r\n        imm.style.width = window.innerWidth\r\n        imm.style.height = window.innerWidth * rotate\r\n        ctx.drawImage(imm, 0, 0, window.innerWidth, window.innerWidth * rotate)\r\n        writeTop(top)\r\n        writeBottom(bottom)\r\n        writeGroup()\r\n        setMemes(canvas.toDataURL(\"image/png\"))\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            <img style={{display: 'none'}} crossOrigin={'anonymous'} id={'kart'} src={image}/>\r\n            {/*<img width={window.innerWidth} height={image.height} src={memes} />*/}\r\n            <canvas\r\n                //style={{display: 'none'}}\r\n                ref={canvasRef}\r\n                width={window.innerWidth}\r\n                height={heightCanvas}\r\n            />\r\n            <FormLayout>\r\n                <Slider\r\n                    min={10}\r\n                    max={100}\r\n                    value={Number(fontH)}\r\n                    onChange={fontH=>setFontH(fontH)}\r\n                    top=\"Размер шрифта\"\r\n                />\r\n                <Tabs>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('white')}\r\n                        selected={fontС === 'white'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'white', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('black')}\r\n                        selected={fontС === 'black'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'black', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('red')}\r\n                        selected={fontС === 'red'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'red', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('blue')}\r\n                        selected={fontС === 'blue'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'blue', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('chocolate')}\r\n                        selected={fontС === 'chocolate'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'chocolate', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('lightseagreen')}\r\n                        selected={fontС === 'lightseagreen'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'lightseagreen', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                </Tabs>\r\n                    <Input\r\n                        status={\r\n                            top.length>0 ?\r\n                                top.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={top.length+'/50'}\r\n                        top=\"Текст верхней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={top}\r\n                        onChange={e=>setTop(e.target.value)}/>\r\n                    <Input\r\n                        status={\r\n                            bottom.length>0 ?\r\n                                bottom.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={bottom.length+'/50'}\r\n                        top=\"Текст нижней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={bottom}\r\n                        onChange={e=>setBottom(e.target.value)}/>\r\n                        <Cell multiline>Обратите внимание: для корректного переноса строк между словами обязательно должны быть пробелы.</Cell>\r\n            </FormLayout>\r\n            {\r\n                top !== '' || bottom !== '' ?\r\n                    <React.Fragment>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button before={<Icon24ShareOutline/>} size=\"l\" stretched style={{ marginRight: 8 }}>На стену</Button>\r\n                            <Button before={<Icon24LogoInstagram/>} size=\"l\" stretched>В историю</Button>\r\n                        </Div>\r\n                        <Div>\r\n                            <Button before={<Icon24Attachments/>} size=\"xl\">Сохранить в библиотеке</Button>\r\n                        </Div>\r\n                    </React.Fragment> :\r\n                    null\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default TouchConstructor;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './style.css'\nimport Home from './panels/Home'\nimport Constructor from './panels/Constructor'\nimport Library from \"./panels/Library\"\nimport TouchConstructor from './panels/TouchConstructor'\nimport {ConfigProvider, ScreenSpinner} from \"@vkontakte/vkui\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [history, setHistory] = useState(['home']);\n\tconst [img, setImg] = useState(null);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(null); //<ScreenSpinner size='large' />\n\tconst [scheme, setScheme] = useState('dark_gray')\n\tconst arrImg = [\n\t\t'https://sun9-56.userapi.com/baoxdsF_-He5F9NiEG9813iB6jspc3Pr2Vk3nQ/0R1ob9TJK2s.jpg',\n\t\t'https://i.imgflip.com/1bij.jpg',\n\t\t'https://sun9-34.userapi.com/Jb02ospH0-uzudorTg4yUWXDGg5CDtELMa68nA/XLgm_Xs8kZY.jpg',\n\t\t'https://sun9-53.userapi.com/kQoYlGSpvfSLVN4AiaZu4Xsth4wR_44yU6-5xA/-3n8REtiI6A.jpg',\n\t\t'https://sun9-10.userapi.com/pQprij-LTwwC7DWNoPI4CGXw3_wS70l6OtUyyg/nYpBF5bKJuY.jpg',\n\t\t'https://sun9-46.userapi.com/JnFsdanmKshkCHetGmIN-93e2X4QK0zAhIBYNA/Brq-SJr-kgo.jpg',\n\t\t'https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg',\n\t\t'https://sun9-16.userapi.com/hNxjkGka1jzBZJta9cG7smu0_25NzqR9l_WL9Q/CcS7f61M2GQ.jpg',\n\t\t'https://sun9-44.userapi.com/jksvfHftzlSQJVEALaBeloaXc1Nmvaq8J6j6dA/mbG5LDMVkgI.jpg',\n\t\t'https://sun9-63.userapi.com/3BcLZYSDoxeRqPtdrRmcTUjibcOdrqJSrhrB1g/gpOCU96uTm8.jpg',\n\t\t'https://sun9-62.userapi.com/gJ1myhBYwdUz0ewDXdQ1V-STN5vQUjlbkgxyqw/5fMS4sz-qUw.jpg',\n\t\t'https://sun9-4.userapi.com/k9-_Nx5VJ2MArBpl29IRKXK3flr-0d7W9F8tOQ/L8XPEe6GycQ.jpg',\n\t\t'https://sun9-34.userapi.com/4mWMID9ksp1Tz4_Apsig_qNzZy1mNpth1vBX0Q/_myyxfSdQHM.jpg',\n\t\t'https://sun9-75.userapi.com/t2ljnJ4ORqMNC66Q3HTdjrYsDsv8sG1dMMUqCw/q6nea6l_Ak0.jpg',\n\t\t'https://sun9-40.userapi.com/6BWKS49ccCcAzUUxKGFqjkYkc__D4doiy8wB8Q/YEY1fzs63fc.jpg',\n\t\t'https://sun9-39.userapi.com/pf_gRQFZzL9UE6scPx9G8N7cN-ctRus8uhqkKw/lSOIOO_wneE.jpg',\n\t\t'https://sun9-63.userapi.com/H0KXs5aOsPqEr5DVV9f61Gtmvwb0odSuklZ6Ow/d2CzFgYTG80.jpg',\n\t\t'https://sun9-37.userapi.com/xKxskj9G7MtgVtlL7vxV4w7LJ5w9b4uTD8_z0w/VQf376wNobw.jpg',\n\t\t'https://sun9-69.userapi.com/dIDbK7DzFx7FL5Xqe9j_uQ3HGcIV0mBVoZI16A/N7UXjDbNScE.jpg',\n\t\t'https://sun9-13.userapi.com/BEtpZmLfWDeLDrYRHFTK4aUwDg8nT6UueTwi4w/73EpnM61_GQ.jpg',\n\t\t'https://sun9-6.userapi.com/jYFrED43siEYCt3vgD7Uj1WvT2nJzEBl4ta8ug/5Rln7JmHYfE.jpg',\n\t\t'https://sun9-26.userapi.com/6koVYGBzhb_3Bg-2jAhazTjuFvPyYSrhFmyvtA/KYqf0fiaEpc.jpg',\n\t\t'https://sun9-2.userapi.com/9zeJTHhDUrMoa68qJSXbQ9kvxllYaR-hznQKSA/YW69HXGyYKA.jpg',\n\t\t'https://sun9-45.userapi.com/ziKBDvdJBWLCO5GemxTk0TQReW-UhG8ZQCHG_g/CRGU39SRFfg.jpg',\n\t\t'https://sun9-28.userapi.com/T9CTBhCI0ZApurOnEXVgAYpK4gswbJo70ocMFQ/M3YpCelEp44.jpg',\n\t\t'https://sun9-70.userapi.com/wKoPyiBSis7iZrWwIckjyKHyWi-Ta1rzdWB8nQ/yLcgm8eU6is.jpg',\n\t\t'https://sun9-16.userapi.com/8yttplN4ygb-8LKCOeAXF31_doNMVSrN29CnoQ/jNw4vZtapKw.jpg',\n\t\t'https://sun9-3.userapi.com/QrRR7PvJ-dGPIPO5g4nxE62SgUu4ohOrA0NoCg/hUJo8xIOHXo.jpg',\n\t\t'https://sun9-32.userapi.com/RlPjct1uSrI1HwIuMiVz9_k7X1LBZOwYWDCq6g/c6ZKGoUdT3Y.jpg',\n\t\t'https://sun9-22.userapi.com/EGxW7fFHp127l9U0RtomfQAmN2mdvhwxqV-9eA/wVy4lQL5bfk.jpg',\n\t\t'https://sun9-67.userapi.com/SFE02MPk102_fiBW5M32ulof0aea5fXF2CtNOw/UNwAJsf8--Q.jpg',\n\t];\n\tconst [images, setImages] = useState(arrImg.reverse())\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst goTo = (panel) => {\n\t\twindow.history.pushState({panel: panel}, panel)\n\t\tsetActivePanel(panel);\n\t\tlet newHistory = [...history, panel]\n\t\tconsole.log(newHistory)\n\t\tsetHistory(newHistory)\n\t};\n\n\tconst goBack = () => {\n\t\tif (history.length === 1) {\n\t\t\tbridge.send('VKWebAppClose', {'status': 'sucsess'})\n\t\t} else {\n\t\t\thistory.pop();\n\t\t\tsetActivePanel(history[history.length-1]);\n\t\t\tconsole.log(history);\n\t\t\tsetHistory(history);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t<View activePanel={activePanel} popout={popout} history={history} onSwipeBack={goBack}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} images={images} setImg={setImg}/>\n\t\t\t<Library id='library' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} images={images}/>\n\t\t\t<TouchConstructor id='touchconstructor' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} image={img} images={images}/>\n\t\t\t<Constructor id='constructor' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} image={img} images={images}/>\n\t\t</View>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}