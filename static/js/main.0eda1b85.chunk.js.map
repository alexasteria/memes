{"version":3,"sources":["panels/Home.js","panels/Constructor.js","panels/Library.js","panels/TouchConstructor.js","App.js","index.js"],"names":["Home","id","goTo","setImg","goBack","fetchedUser","images","useState","activeTab","setActiveTab","separator","onClick","selected","Fragment","before","size","header","subheader","mode","src","actions","map","image","index","key","style","padding","borderRadius","margin","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Constructor","schema","Image","canvasRef","React","useRef","top","setTop","bottom","setBottom","setGenStatus","setMemes","fontH","setFontH","fontС","setFontС","heightCanvas","setHeightCanvas","getFontHeight","font","parent","document","createElement","appendChild","createTextNode","body","cssText","offsetHeight","removeChild","useEffect","imm","getElementById","rotate","width","window","innerWidth","canvas","current","ctx","getContext","clearRect","drawImage","text","fillStyle","lineHeight","maxWidth","marginTop","words","split","countWords","length","line","n","testLine","measureText","marginLeft","fillText","writeTop","writeBottom","writeGroup","toDataURL","generate","left","display","crossOrigin","ref","min","max","value","Number","onChange","backgroundColor","border","status","placeholder","e","target","multiline","stretched","marginRight","Library","TouchConstructor","App","activePanel","setActivePanel","history","setHistory","img","setUser","popout","setPopout","scheme","a","bridge","send","user","console","log","subscribe","detail","type","data","schemeAttribute","createAttribute","attributes","setNamedItem","fetchData","panel","pushState","newHistory","pop","onSwipeBack","reverse","ReactDOM","render"],"mappings":"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","file":"static/js/main.0eda1b85.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {PanelHeader, Panel, CardGrid, Card, Group, Button, Banner, Avatar, Header, TabsItem, Tabs, Cell} from \"@vkontakte/vkui\";\r\nimport Icon56DownloadSquareOutline from '@vkontakte/icons/dist/56/download_square_outline';\r\n\r\nconst Home = ({id, goTo, goBack, fetchedUser, setImg, images }) => {\r\n    const [activeTab, setActiveTab] = useState('memes');\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader separator={false}>\r\n                Memes\r\n            </PanelHeader>\r\n            <Tabs>\r\n                <TabsItem\r\n                    onClick={() => setActiveTab('memes')}\r\n                    selected={activeTab === 'memes'}\r\n                >\r\n                    Мемасики\r\n                </TabsItem>\r\n                <TabsItem\r\n                    onClick={() => setActiveTab('about')}\r\n                    selected={activeTab === 'about'}\r\n                >\r\n                    О пользователе\r\n                </TabsItem>\r\n            </Tabs>\r\n            {\r\n                activeTab === 'memes' &&\r\n                <React.Fragment>\r\n                    <Banner\r\n                        before={<Avatar size={96}><Icon56DownloadSquareOutline /></Avatar>}\r\n                        header=\"Индивидуальный\"\r\n                        subheader=\"Создать мем на основе Вашего фона, его никто не увидит\"\r\n                        // actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    <Banner\r\n                        before={<Avatar size={96} mode=\"image\" src=\"https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg\" />}\r\n                        header=\"Двустрочный\"\r\n                        subheader=\"Две строки для текста\"\r\n                        actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    <Banner\r\n                        before={<Avatar size={96} mode=\"image\" src=\"https://sun9-32.userapi.com/ParIQVaDXNxPzFTeh4EfL7Okamle-0ZvmvRRcg/N2NXEDHfEbs.jpg\" />}\r\n                        header=\"Квадраты\"\r\n                        subheader=\"Два квадрата справа для текста\"\r\n                        //actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}\r\n                    />\r\n                    {/*<Banner*/}\r\n                    {/*    before={<Avatar size={96} mode=\"image\" src=\"https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg\" />}*/}\r\n                    {/*    header=\"Двустрочный\"*/}\r\n                    {/*    subheader=\"Мем с двумя строками\"*/}\r\n                    {/*    actions={<Button onClick={()=>goTo('library')}>Выбрать</Button>}*/}\r\n                    {/*/>*/}\r\n                    <Group separator=\"hide\" header={<Header mode=\"secondary\">Новые фоны</Header>}>\r\n                        <CardGrid>\r\n                            {\r\n                                images.map((image, index)=>{\r\n                                    return (\r\n                                        <Card\r\n                                            key={index}\r\n                                            style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                            size=\"s\"\r\n                                            onClick={()=>{\r\n                                                setImg(image);\r\n                                                goTo('touchconstructor')\r\n                                            }}\r\n                                        >\r\n                                            <div style={{\r\n                                                height: 96,\r\n                                                backgroundImage: 'url(' + image + ')',\r\n                                                backgroundSize: 'cover',\r\n                                                backgroundPosition: 'center 35%',\r\n                                                backgroundRepeat: 'no-repeat',\r\n                                                borderRadius: 13\r\n                                            }} />\r\n                                        </Card>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </CardGrid>\r\n                    </Group>\r\n                </React.Fragment>\r\n            }\r\n            {\r\n                activeTab === 'about' &&\r\n                    <Cell>djn</Cell>\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst Constructor = ({id, image, goTo, goBack}) => {\r\n    let schema = new Image()\r\n    schema.src = image\r\n    const [img, setImg] = useState(schema);\r\n    const canvasRef = React.useRef(null)\r\n    const [top, setTop] = useState('')\r\n    const [bottom, setBottom] = useState('')\r\n    const [genStatus, setGenStatus] = useState(false)\r\n    const [memes, setMemes] = useState(image)\r\n    const [fontH, setFontH] = useState(30)\r\n    const [fontС, setFontС] = useState('white')\r\n    const [heightCanvas, setHeightCanvas] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        generate()\r\n    })\r\n\r\n    useEffect(()=>{\r\n        // const canvas = canvasRef.current\r\n        // const ctx = canvas.getContext('2d')\r\n        // let imm = document.getElementById('kart');\r\n        // let rotate = imm.height / imm.width\r\n        // imm.style.width = window.innerWidth\r\n        // imm.style.height = window.innerWidth * rotate\r\n        // console.log(imm)\r\n        // ctx.drawImage(imm, 0, 0)\r\n        //ctx.drawImage(img, 0, 0)\r\n    }, [])\r\n    function writeTop(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = fontС;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let maxWidth = canvas.width;\r\n        let marginTop = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeBottom(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        let maxWidth = canvas.width;\r\n        let marginTop;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        ctx.measureText(text).width > maxWidth ?\r\n            marginTop = canvas.height - getFontHeight(ctx.font)-10 :\r\n            marginTop = canvas.height - 10\r\n        ctx.fillStyle = fontС;\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeGroup() {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.font = '10px Arial';\r\n        ctx.fillStyle = '#FFF';\r\n        let marginTop = canvas.height - 2\r\n        let marginLeft = 0\r\n        ctx.fillText('https://vk.com/gen_memes', marginLeft, marginTop);\r\n    }\r\n    function getFontHeight(font) {\r\n        let parent = document.createElement(\"span\");\r\n        parent.appendChild(document.createTextNode(\"height\"));\r\n        document.body.appendChild(parent);\r\n        parent.style.cssText = \"font: \" + font + \"; white-space: nowrap; display: inline;\";\r\n        let height = parent.offsetHeight;\r\n        document.body.removeChild(parent);\r\n        return height;\r\n    }\r\n    function generate(){\r\n        let imm = document.getElementById('kart');\r\n        let rotate = imm.height / imm.width\r\n        setHeightCanvas(window.innerWidth*rotate)\r\n\r\n        setGenStatus(true)\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.clearRect(0,0,canvas.width,canvas.height)\r\n        imm.style.width = window.innerWidth\r\n        imm.style.height = window.innerWidth * rotate\r\n        ctx.drawImage(imm, 0, 0, window.innerWidth, window.innerWidth * rotate)\r\n        writeTop(top)\r\n        writeBottom(bottom)\r\n        writeGroup()\r\n        setMemes(canvas.toDataURL(\"image/png\"))\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            <img style={{display: 'none'}} crossOrigin={'anonymous'} id={'kart'} src={image}/>\r\n            {/*<img width={window.innerWidth} height={image.height} src={memes} />*/}\r\n            <canvas\r\n                //style={{display: 'none'}}\r\n                ref={canvasRef}\r\n                width={window.innerWidth}\r\n                height={heightCanvas}\r\n            />\r\n            <FormLayout>\r\n                <Slider\r\n                    min={10}\r\n                    max={100}\r\n                    value={Number(fontH)}\r\n                    onChange={fontH=>setFontH(fontH)}\r\n                    top=\"Размер шрифта\"\r\n                />\r\n                <Tabs>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('white')}\r\n                        selected={fontС === 'white'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'white', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('black')}\r\n                        selected={fontС === 'black'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'black', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('red')}\r\n                        selected={fontС === 'red'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'red', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('blue')}\r\n                        selected={fontС === 'blue'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'blue', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('chocolate')}\r\n                        selected={fontС === 'chocolate'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'chocolate', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('lightseagreen')}\r\n                        selected={fontС === 'lightseagreen'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'lightseagreen', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                </Tabs>\r\n                    <Input\r\n                        status={\r\n                            top.length>0 ?\r\n                                top.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={top.length+'/50'}\r\n                        top=\"Текст верхней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={top}\r\n                        onChange={e=>setTop(e.target.value)}/>\r\n                    <Input\r\n                        status={\r\n                            bottom.length>0 ?\r\n                                bottom.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={bottom.length+'/50'}\r\n                        top=\"Текст нижней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={bottom}\r\n                        onChange={e=>setBottom(e.target.value)}/>\r\n                        <Cell multiline>Обратите внимание: для корректного переноса строк между словами обязательно должны быть пробелы.</Cell>\r\n            </FormLayout>\r\n            {\r\n                top !== '' || bottom !== '' ?\r\n                    <React.Fragment>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button before={<Icon24ShareOutline/>} size=\"l\" stretched style={{ marginRight: 8 }}>На стену</Button>\r\n                            <Button before={<Icon24LogoInstagram/>} size=\"l\" stretched>В историю</Button>\r\n                        </Div>\r\n                        <Div>\r\n                            <Button before={<Icon24Attachments/>} size=\"xl\">Сохранить в библиотеке</Button>\r\n                        </Div>\r\n                    </React.Fragment> :\r\n                    null\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Constructor;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem, CardGrid, Card, Group\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst Library = ({id, goTo, goBack, fetchedUser, setImg, images}) => {\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            <Group separator=\"hide\">\r\n                <CardGrid>\r\n                    {\r\n                        images.map((image, index)=>{\r\n                            return (\r\n                                <Card\r\n                                    key={index}\r\n                                    style={{padding: 2, borderRadius: 13, margin: 0}}\r\n                                    size=\"s\"\r\n                                    onClick={()=>{\r\n                                        setImg(image);\r\n                                        goTo('touchconstructor')\r\n                                    }}\r\n                                >\r\n                                    <div style={{\r\n                                        height: 96,\r\n                                        backgroundImage: 'url(' + image + ')',\r\n                                        backgroundSize: 'cover',\r\n                                        backgroundPosition: 'center 35%',\r\n                                        backgroundRepeat: 'no-repeat',\r\n                                        borderRadius: 13\r\n                                    }} />\r\n                                </Card>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardGrid>\r\n            </Group>\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default Library;","import React, { useState, useEffect, useRef } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport {\r\n    PanelHeader, Panel, PanelHeaderBack, Cell\r\n    , Div, Button, Input, FormLayout, Slider, Tabs, TabsItem\r\n} from \"@vkontakte/vkui\";\r\nimport Icon24LogoInstagram from '@vkontakte/icons/dist/24/logo_instagram';\r\nimport Icon24ShareOutline from '@vkontakte/icons/dist/24/share_outline';\r\nimport Icon24Attachments from '@vkontakte/icons/dist/24/attachments';\r\nimport Icon12Fire from '@vkontakte/icons/dist/12/fire';\r\n\r\nconst TouchConstructor = ({id, image, goTo, goBack}) => {\r\n    let schema = new Image()\r\n    schema.src = image\r\n    const [img, setImg] = useState(schema);\r\n    const canvasRef = React.useRef(null)\r\n    const [top, setTop] = useState('')\r\n    const [bottom, setBottom] = useState('')\r\n    const [genStatus, setGenStatus] = useState(false)\r\n    const [memes, setMemes] = useState(image)\r\n    const [fontH, setFontH] = useState(30)\r\n    const [fontС, setFontС] = useState('white')\r\n    const [heightCanvas, setHeightCanvas] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        generate()\r\n    })\r\n\r\n    useEffect(()=>{\r\n        // const canvas = canvasRef.current\r\n        // const ctx = canvas.getContext('2d')\r\n        // let imm = document.getElementById('kart');\r\n        // let rotate = imm.height / imm.width\r\n        // imm.style.width = window.innerWidth\r\n        // imm.style.height = window.innerWidth * rotate\r\n        // console.log(imm)\r\n        // ctx.drawImage(imm, 0, 0)\r\n        //ctx.drawImage(img, 0, 0)\r\n    }, [])\r\n    function writeTop(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.fillStyle = fontС;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let maxWidth = canvas.width;\r\n        let marginTop = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeBottom(text) {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        let maxWidth = canvas.width;\r\n        let marginTop;\r\n        ctx.font = 'bold '+fontH+'px impact';\r\n        ctx.measureText(text).width > maxWidth ?\r\n            marginTop = canvas.height - getFontHeight(ctx.font)-10 :\r\n            marginTop = canvas.height - 10\r\n        ctx.fillStyle = fontС;\r\n        let lineHeight = getFontHeight(ctx.font);\r\n        let words = text.split(\" \");\r\n        let countWords = words.length;\r\n        let line = \"\";\r\n        for (let n = 0; n < countWords; n++) {\r\n            let testLine = line + words[n] + \" \";\r\n            let testWidth = ctx.measureText(testLine).width;\r\n            if (testWidth > maxWidth) {\r\n                let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n                ctx.fillText(line, marginLeft, marginTop);\r\n                line = words[n] + \" \";\r\n                marginTop += lineHeight;\r\n            }\r\n            else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        let marginLeft = ((canvas.width - ctx.measureText(line).width)/2)\r\n        ctx.fillText(line, marginLeft, marginTop);\r\n    }\r\n    function writeGroup() {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.font = '10px Arial';\r\n        ctx.fillStyle = '#FFF';\r\n        let marginTop = canvas.height - 2\r\n        let marginLeft = 0\r\n        ctx.fillText('https://vk.com/gen_memes', marginLeft, marginTop);\r\n    }\r\n    function getFontHeight(font) {\r\n        let parent = document.createElement(\"span\");\r\n        parent.appendChild(document.createTextNode(\"height\"));\r\n        document.body.appendChild(parent);\r\n        parent.style.cssText = \"font: \" + font + \"; white-space: nowrap; display: inline;\";\r\n        let height = parent.offsetHeight;\r\n        document.body.removeChild(parent);\r\n        return height;\r\n    }\r\n    function generate(){\r\n        let imm = document.getElementById('kart');\r\n        let rotate = imm.height / imm.width\r\n        setHeightCanvas(window.innerWidth*rotate)\r\n\r\n        setGenStatus(true)\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.clearRect(0,0,canvas.width,canvas.height)\r\n        imm.style.width = window.innerWidth\r\n        imm.style.height = window.innerWidth * rotate\r\n        ctx.drawImage(imm, 0, 0, window.innerWidth, window.innerWidth * rotate)\r\n        writeTop(top)\r\n        writeBottom(bottom)\r\n        writeGroup()\r\n        setMemes(canvas.toDataURL(\"image/png\"))\r\n    }\r\n\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader left={<PanelHeaderBack onClick={goBack} />}>\r\n                Создание мема\r\n            </PanelHeader>\r\n            <img style={{display: 'none'}} crossOrigin={'anonymous'} id={'kart'} src={image}/>\r\n            {/*<img width={window.innerWidth} height={image.height} src={memes} />*/}\r\n            <canvas\r\n                //style={{display: 'none'}}\r\n                ref={canvasRef}\r\n                width={window.innerWidth}\r\n                height={heightCanvas}\r\n            />\r\n            <FormLayout>\r\n                <Slider\r\n                    min={10}\r\n                    max={100}\r\n                    value={Number(fontH)}\r\n                    onChange={fontH=>setFontH(fontH)}\r\n                    top=\"Размер шрифта\"\r\n                />\r\n                <Tabs>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('white')}\r\n                        selected={fontС === 'white'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'white', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('black')}\r\n                        selected={fontС === 'black'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'black', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('red')}\r\n                        selected={fontС === 'red'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'red', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('blue')}\r\n                        selected={fontС === 'blue'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'blue', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('chocolate')}\r\n                        selected={fontС === 'chocolate'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'chocolate', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                        onClick={()=>setFontС('lightseagreen')}\r\n                        selected={fontС === 'lightseagreen'}\r\n                    >\r\n                        <Div style={{height: 5, width: 5, borderRadius: 50, backgroundColor: 'lightseagreen', border: '2px solid darkslateblue', margin: 'auto'}}/>\r\n                    </TabsItem>\r\n                </Tabs>\r\n                    <Input\r\n                        status={\r\n                            top.length>0 ?\r\n                                top.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={top.length+'/50'}\r\n                        top=\"Текст верхней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={top}\r\n                        onChange={e=>setTop(e.target.value)}/>\r\n                    <Input\r\n                        status={\r\n                            bottom.length>0 ?\r\n                                bottom.length < 50 ? 'valid' : 'error' :\r\n                                null\r\n                        }\r\n                        bottom={bottom.length+'/50'}\r\n                        top=\"Текст нижней строки\"\r\n                        placeholder={'Напишите, или оставьте поле пустым'}\r\n                        value={bottom}\r\n                        onChange={e=>setBottom(e.target.value)}/>\r\n                        <Cell multiline>Обратите внимание: для корректного переноса строк между словами обязательно должны быть пробелы.</Cell>\r\n            </FormLayout>\r\n            {\r\n                top !== '' || bottom !== '' ?\r\n                    <React.Fragment>\r\n                        <Div style={{display: 'flex'}}>\r\n                            <Button before={<Icon24ShareOutline/>} size=\"l\" stretched style={{ marginRight: 8 }}>На стену</Button>\r\n                            <Button before={<Icon24LogoInstagram/>} size=\"l\" stretched>В историю</Button>\r\n                        </Div>\r\n                        <Div>\r\n                            <Button before={<Icon24Attachments/>} size=\"xl\">Сохранить в библиотеке</Button>\r\n                        </Div>\r\n                    </React.Fragment> :\r\n                    null\r\n            }\r\n        </Panel>\r\n    );\r\n}\r\n\r\nexport default TouchConstructor;","import React, { useState, useEffect } from 'react';\n//import bridge from '@vkontakte/vk-bridge';\nimport bridge from '@vkontakte/vk-bridge-mock';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home'\nimport Constructor from './panels/Constructor'\nimport Library from \"./panels/Library\"\nimport TouchConstructor from './panels/TouchConstructor'\nimport {ConfigProvider, ScreenSpinner} from \"@vkontakte/vkui\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [history, setHistory] = useState(['home']);\n\tconst [img, setImg] = useState(null);\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />); //<ScreenSpinner size='large' />\n\tconst [scheme, setScheme] = useState('dark_gray')\n\tconst [images, setImages] = useState([\n\t\t'https://sun9-56.userapi.com/baoxdsF_-He5F9NiEG9813iB6jspc3Pr2Vk3nQ/0R1ob9TJK2s.jpg',\n\t\t'https://i.imgflip.com/1bij.jpg',\n\t\t'https://sun9-34.userapi.com/Jb02ospH0-uzudorTg4yUWXDGg5CDtELMa68nA/XLgm_Xs8kZY.jpg',\n\t\t'https://sun9-53.userapi.com/kQoYlGSpvfSLVN4AiaZu4Xsth4wR_44yU6-5xA/-3n8REtiI6A.jpg',\n\t\t'https://sun9-10.userapi.com/pQprij-LTwwC7DWNoPI4CGXw3_wS70l6OtUyyg/nYpBF5bKJuY.jpg',\n\t\t'https://sun9-46.userapi.com/JnFsdanmKshkCHetGmIN-93e2X4QK0zAhIBYNA/Brq-SJr-kgo.jpg',\n\t\t'https://sun9-14.userapi.com/CNBgsxFXMRFS7UPJNyUfxKb_krOhqLrDc3sZtQ/-h_uYiLGLcA.jpg',\n\t\t'https://sun9-16.userapi.com/hNxjkGka1jzBZJta9cG7smu0_25NzqR9l_WL9Q/CcS7f61M2GQ.jpg',\n\t\t'https://sun9-44.userapi.com/jksvfHftzlSQJVEALaBeloaXc1Nmvaq8J6j6dA/mbG5LDMVkgI.jpg',\n\t\t'https://sun9-63.userapi.com/3BcLZYSDoxeRqPtdrRmcTUjibcOdrqJSrhrB1g/gpOCU96uTm8.jpg',\n\t\t'https://sun9-62.userapi.com/gJ1myhBYwdUz0ewDXdQ1V-STN5vQUjlbkgxyqw/5fMS4sz-qUw.jpg',\n\t\t'https://sun9-4.userapi.com/k9-_Nx5VJ2MArBpl29IRKXK3flr-0d7W9F8tOQ/L8XPEe6GycQ.jpg',\n\t\t'https://sun9-34.userapi.com/4mWMID9ksp1Tz4_Apsig_qNzZy1mNpth1vBX0Q/_myyxfSdQHM.jpg',\n\t\t'https://sun9-75.userapi.com/t2ljnJ4ORqMNC66Q3HTdjrYsDsv8sG1dMMUqCw/q6nea6l_Ak0.jpg',\n\t\t'https://sun9-40.userapi.com/6BWKS49ccCcAzUUxKGFqjkYkc__D4doiy8wB8Q/YEY1fzs63fc.jpg',\n\t\t'https://sun9-39.userapi.com/pf_gRQFZzL9UE6scPx9G8N7cN-ctRus8uhqkKw/lSOIOO_wneE.jpg',\n\t\t'https://sun9-63.userapi.com/H0KXs5aOsPqEr5DVV9f61Gtmvwb0odSuklZ6Ow/d2CzFgYTG80.jpg',\n\t\t'https://sun9-37.userapi.com/xKxskj9G7MtgVtlL7vxV4w7LJ5w9b4uTD8_z0w/VQf376wNobw.jpg',\n\t\t'https://sun9-69.userapi.com/dIDbK7DzFx7FL5Xqe9j_uQ3HGcIV0mBVoZI16A/N7UXjDbNScE.jpg',\n\t\t'https://sun9-13.userapi.com/BEtpZmLfWDeLDrYRHFTK4aUwDg8nT6UueTwi4w/73EpnM61_GQ.jpg',\n\t\t'https://sun9-6.userapi.com/jYFrED43siEYCt3vgD7Uj1WvT2nJzEBl4ta8ug/5Rln7JmHYfE.jpg',\n\t\t'https://sun9-26.userapi.com/6koVYGBzhb_3Bg-2jAhazTjuFvPyYSrhFmyvtA/KYqf0fiaEpc.jpg',\n\t\t'https://sun9-2.userapi.com/9zeJTHhDUrMoa68qJSXbQ9kvxllYaR-hznQKSA/YW69HXGyYKA.jpg',\n\t\t'https://sun9-45.userapi.com/ziKBDvdJBWLCO5GemxTk0TQReW-UhG8ZQCHG_g/CRGU39SRFfg.jpg',\n\t\t'https://sun9-28.userapi.com/T9CTBhCI0ZApurOnEXVgAYpK4gswbJo70ocMFQ/M3YpCelEp44.jpg',\n\t\t'https://sun9-70.userapi.com/wKoPyiBSis7iZrWwIckjyKHyWi-Ta1rzdWB8nQ/yLcgm8eU6is.jpg',\n\t\t'https://sun9-16.userapi.com/8yttplN4ygb-8LKCOeAXF31_doNMVSrN29CnoQ/jNw4vZtapKw.jpg',\n\t\t'https://sun9-3.userapi.com/QrRR7PvJ-dGPIPO5g4nxE62SgUu4ohOrA0NoCg/hUJo8xIOHXo.jpg',\n\t\t'https://sun9-32.userapi.com/RlPjct1uSrI1HwIuMiVz9_k7X1LBZOwYWDCq6g/c6ZKGoUdT3Y.jpg',\n\t\t'https://sun9-22.userapi.com/EGxW7fFHp127l9U0RtomfQAmN2mdvhwxqV-9eA/wVy4lQL5bfk.jpg',\n\t\t'https://sun9-67.userapi.com/SFE02MPk102_fiBW5M32ulof0aea5fXF2CtNOw/UNwAJsf8--Q.jpg',\n\t])\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconsole.log(user)\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst goTo = (panel) => {\n\t\twindow.history.pushState({panel: panel}, panel)\n\t\tsetActivePanel(panel);\n\t\tlet newHistory = [...history, panel]\n\t\tconsole.log(newHistory)\n\t\tsetHistory(newHistory)\n\t};\n\n\tconst goBack = () => {\n\t\tif (history.length === 1) {\n\t\t\tbridge.send('VKWebAppClose', {'status': 'sucsess'})\n\t\t} else {\n\t\t\thistory.pop();\n\t\t\tsetActivePanel(history[history.length-1]);\n\t\t\tconsole.log(history);\n\t\t\tsetHistory(history);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t<View activePanel={activePanel} popout={popout} history={history} onSwipeBack={goBack}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} images={images} setImg={setImg}/>\n\t\t\t<Library id='library' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} images={images.reverse()}/>\n\t\t\t<TouchConstructor id='touchconstructor' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} image={img} images={images.reverse()}/>\n\t\t\t<Constructor id='constructor' fetchedUser={fetchedUser} goTo={goTo} goBack={goBack} setImg={setImg} image={img} images={images.reverse()}/>\n\t\t</View>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import bridge from \"@vkontakte/vk-bridge\";\nimport bridge from '@vkontakte/vk-bridge-mock';\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}